//--------------------------------------------------------------
// 服务器多线网络配置文件
//--------------------------------------------------------------
multinet_athena: {
	enabled: false	/* 是否启用多线路支持机制, false 为禁用, true 为启用 */
	verbose: true  /* 是否在终端打印出更详细的信息, 如果觉得太烦可以关闭它 */
	/*
		若想启用多线路支持机制, 你还需要在以下配置文件的字段中,
		将相关的IP地址配置好:
		- conf/char_athena.conf 中的 char_ip 选项
		- conf/map_athena.conf  中的 map_ip  选项
	*/
	groups: {
	/*
		---------------------------
		在这里将IP地址分组
		---------------------------
		无论你的 char 和 map 会启动几个(一般我们都只启动1个char和一个map)
		无论你的服务端是都设置在一台物理服务器上, 还是分为N台物理服务器上
		只需要把相同线路的IP地址, 按逗号分隔填写在下面即可
		
		下面例子中的 telecom 和 unicom 可以随意起名, 只要不重复就好(只能是英文)
		
		---------------------------
		单物理服务器部署
		---------------------------
		若你的登录、角色、地图服务器运行在同一台物理服务器上, 而且这台服务器有多个线路的IP地址
		只需要按照分组将IP地址分开即可
		
		例如:
		服务器电信地址: 110.110.110.110 联通地址: 142.142.142.142
		
		那么你只需要添加以下两个分组:
		
		telecom: {
			public_ip: "110.110.110.110"
		}
		unicom: {
			public_ip: "142.142.142.142"
		}
		
		就可以了~
		
		---------------------------
		多物理服务器部署
		---------------------------
		若你的登录、角色、地图服务器运行在多台物理服务器上, 而是分开部署在多台物理服务器的情况下, 
		只需要用逗号把不同物理服务器中相同线路的IP地址放在一起即可
		
		例如:
		LOGIN - 电信地址: 111.111.111.111 联通地址: 112.112.112.112
		CHAR  - 电信地址: 222.222.222.222 联通地址: 223.223.223.223
		MAP   - 电信地址: 100.100.100.100 联通地址: 101.101.101.101
		
		那么你只需要添加以下两个分组:
		
		telecom: {
			public_ip: "111.111.111.111,222.222.222.222,100.100.100.100"
		}
		unicom: {
			public_ip: "112.112.112.112,223.223.223.223,101.101.101.101"
		}
		
		就可以了~
		
		---------------------------
		你可以随意延展分组
		---------------------------
		比如当你的服务器拥有三条线路(电信、联通、教育网)的时候,
		可以在 unicom 的下面增加一组配置:
		
		education: {
			public_ip: "你服务器在教育网的IP地址"
		}
		
		---------------------------
		关于域名的使用注意事项
		---------------------------
		所有IP皆支持设置为域名, 但不推荐, 服务器只会在首次启动时去将域名解析成IP地址,
		若服务器启动后域名指向的IP地址有改变, 则必须要重新开启服务器才会更新IP
		
		---------------------------
		在局域网内(LAN)或 NAT 后方运行时的配置方法
		---------------------------
		当你的服务器运作在局域网内(LAN)或 NAT 后方时, 
		服务端的网卡地址会分配到局域网IP上(而非公网IP上), 此时就要配置一组 private_ip 以便服务端将其转换为正确的 public_ip
		
		这种操作常见于以下几种情况:
		1. 电脑在局域网中, 然后使用路由器的端口映射将公网IP地址映射到了局域网内该电脑的某端口上
		2. 用家里的电脑开服(无论此电脑使用的是局域网IP地址还是公网IP地址), 然后又在电脑上运行了虚拟机(虚拟机通过 NAT 上网), 在虚拟机中开服
		3. 使用类似阿里云SLB负载均衡, 将真正开服的服务器的IP地址隐藏起来的情况 (其实原理和第1种情况类似)
		
		例如:
		LOGIN - 电信内部: 192.168.111.1 电信外部: 111.111.111.111 , 联通内部: 192.168.112.1 联通外部: 112.112.112.112
		CHAR  - 电信内部: 192.168.222.1 电信外部: 222.222.222.222 , 联通内部: 192.168.223.1 联通外部: 223.223.223.223
		MAP   - 电信内部: 192.168.100.1 电信外部: 100.100.100.100 , 联通内部: 192.168.101.1 联通外部: 101.101.101.101
		
		那么你只需要添加以下两个分组:
		
		telecom: {
			public_ip: "111.111.111.111,222.222.222.222,100.100.100.100"
			private_ip: "192.168.111.1,192.168.222.1,192.168.100.1"
		}
		unicom: {
			public_ip: "112.112.112.112,223.223.223.223,101.101.101.101"
			private_ip: "192.168.112.1,192.168.223.1,192.168.101.1"
		}
		
		完成以上设置之后, 当服务端发现有人从 192.168.111.1 与自己建立连接时, 会映射到对应的公网地址: 111.111.111.111
		随后程序就能够立刻确定玩家企图使用的是 telecom 分组中的公网IP与服务端进行连接, 接下来就会将下游服务器在该分组中的公网地址发送给客户端
		
		所谓的下游服务器是指: char 是 login 的下游, map 是 char 的下游
	*/
		telecom: {
			public_ip: "110.110.110.110"
		}
		unicom: {
			public_ip: "112.112.112.112"
		}
	}
}
