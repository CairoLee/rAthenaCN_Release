/*

玩家组别配置文件
----------------

这个文件用来定义“玩家组别”以及他们可拥有的权限. 

每一个组都有它的编号和名称, 可以使用的指令列表和权限, 
以及是否继承其他组别的权限. 


各个字段的作用说明
------------------
<id>
此组的组别编号, 也就是login表里面传说中的group_id, 如果你账号的group_id是0, 
那么意味着最后系统会根据这一组的内容, 来赋予你指令或者权限. 

当新建账号的时候, 账号的group_id默认都是0, 也表示这是一个普通玩家账号. 

<name>
此组成员的称号（或者说名称）, 这个名称一般情况下脚本和系统都不会重视它, 
只是用来做一些提示用. 比如当你在游戏里面用@who指令查看全服有谁在线的时候, 
可以看到这个人是哪个组的成员. 

<level>
此组成员的组别等级(或称之为GM等级), 脚本里面可以使用getgmlevel()指令
来获取这个值, 这个值用来表示这个组成员的GM等级. 

注意: 哪怕你组别编号(group_id)是0, 但是把组别编号为0的组的level值改成99, 
那么在脚本里面使用getgmlevel()来获取这个值也会得到99, 但是此时并非表示
此账号是一个组别编号为99的账号. 

组别等级一般用在一些限制策略上, 比如db/item_trade.txt文件中用来限制玩家
是否可以无视物品交易策略. 

<commands>
这个选项下文称之为“指令设置”, 这里可以设定此组成员是否有权限使用一些GM指令. 

设定的格式为
	<指令名称> : <布尔值 是否允许用@前缀来调用)>
或者
	<指令名称> : [ <布尔值 是否允许用@前缀来调用>, <布尔值 是否允许用#前缀来调用> ]

若您选用上面只有一个布尔值的方式来设置, 那么一旦将这个指令设置为true则表示
玩家拥有这个指令@前缀(对自己使用)的使用权, 但没有这个指令#前缀(对他人使用)的使用权

若您选用上面有两个布尔值的方式来设置, 那么第一个布尔值用来控制玩家是否有权
获得这个指令@前缀的使用权、第二个布尔值用来控制玩家是否有权获得这个指令#前缀的使用权

想查看所有可用的指令的话, 可以参考: doc/atcommands.txt.
注意: 这里的指令名称只能是指令的原名, 比如 autotrade, 而不能是指令的别名, 比如 at

<log_commands>
此组玩家使用指令的时候, 是否被记录到数据库. 比如此组玩家在什么时候, 
什么地点, 使用过什么GM指令. 这个功能一般用于管理员来确认一些玩家GM
是否有违规使用GM指令的情况. 

如果没有这个字段, 那么说明默认不记录. 这个值如果为true, 并且当 
conf\log_athena.conf 配置文件中的 log_commands 项目处于开启状态的话, 
那么此组玩家使用指令的情况, 将会被记录到日志数据库里面的 atcommandlog 表! 

<permissions>
这个选项下文称之为“权限设置”. 
设定的格式为
	<权限的名称> : <布尔值 是否启用>
如果没有将一个权限加入到列表中的话, 那么默认是false(不启用)
想查看所有的权限列表的话, 请参考: doc/permissions.txt 文件

<inherit>
在这里可以设置该组玩家继承哪个组的指令和权限. 
组别称号即上述的<name>字段, 区分大小写. 

继承结果说明
------------
在继承选项中, 是允许使用多重继承的, 比如: 
	第一种情况: 第 1 组可以同时继承第 2 组和第 3 组的设置
                这种情况下, 第 2 组和第 3 组称之为“第 1 组的父组”
	第二种情况: 第 3 组继承了第 2 组的设置, 第 2 组继承了第 1 组的设置

配置的继承是不能循环嵌套的(比如第 1 组继承了第 2 组的设置, 但是与此同时
第 2 组也继承了第 1 组的设置). 

如果出现循环嵌套的话, 那么会导致出现问题的组别配置信息自动被服务端忽略, 
最终导致服务端无法完美工作. 

继承指令和权限设置时, 只继承当前组中没有设置的指令或权限. 
也就是说, 如果当前组已明确禁止 autotrade 指令, 那么就算父组允许使用 autotrade, 
那么服务端也会按照当前组的配置为准(即禁止 autotrade). 

若一个组继承了其他多个父组, 且这些父组中都指定了某个指令或权限的状态, 
那么系统将无法保证具体继承哪一个父组的设置. 

语法说明
--------
这个文件使用了libconfig语法, 详见: 
http://www.hyperrealm.com/libconfig/libconfig_manual.html#Configuration-Files

从 r15572 之前的版本升级说明
----------------------------
备注: 在 r15572 之前的rAthena并没有groups.conf文件, 所以若您的
      服务端是很老的版本的话, 可参考以下连接, 升级到有groups.conf的版本
http://rathena.org/board/index.php?showtopic=58877
*/

groups: (
{
	id: 0 /* 当玩家新建账号时, 都会隶属于这个第0组 */
	name: "普通玩家"
	level: 0
	inherit: ( /* 这里是空的, 表示不继承其他组的权限设置 */ )
	commands: {
		/* 默认情况下, 普通玩家不能使用任何指令 */
		/* 不过由于2015系列客户端无法出现领养菜单, 所以默认给所有玩家可执行 @adopt 指令的权利 */
		adopt: true
	}
	permissions: {
		/* 如果不添加下面这几个基础权限的话, 普通玩家将无法交易和组队. */
		can_trade: true
		can_party: true
		command_enable: true
	}
},
{
	id: 1
	name: "超级玩家"
	inherit: ( "普通玩家" ) /* 超级玩家继承了普通玩家的权限设置, 可以做任何普通玩家能做的事情 */
	level: 0
	commands: {
		/* 
		   下面是一些信息查询指令
		   所谓信息查询, 也就是帮你查信息的, 比如魔物信息, 掉率信息等
		*/
		commands: true
		charcommands: true
		help: true
		rates: true
		uptime: true
		showdelay: true
		exp: true
		mobinfo: true
		iteminfo: true
		whodrops: true
		time: true
		jailtime: true
		hominfo: true
		homstats: true
		showexp: true
		showzeny: true
		whereis: true
		/* 
		   下面是一些功能指令
		   所谓功能指令, 也就是使用后会触发某些功能的, 比如离线挂店等
		*/
		refresh: true
		noask: true
		noks: true
		autoloot: true
		alootid: true
		autoloottype: true
		autotrade: true
		request: true
		go: true
		breakguild: true
		channel: true
		langtype: true
	}
	permissions: {
	}
},
{
	id: 2
	name: "客服人员"
	inherit: ( "超级玩家" )
	level: 1
	commands: {
		version: true
		where: true
		jumpto: true
		who: true
		who2: true
		who3: true
		whomap: true
		whomap2: true
		whomap3: true
		users: true
		broadcast: true
		localbroadcast: true
	}
	log_commands: true
	permissions: {
		receive_requests: true
		view_equipment: true
	}
},
{
	id: 3
	name: "脚本管理员"
	inherit: ( "客服人员" )
	level: 1
	commands: {
		tonpc: true
		hidenpc: true
		shownpc: true
		loadnpc: true
		unloadnpc: true
		npcmove: true
		addwarp: true
	}
	log_commands: true
	permissions: {
		any_warp: true
	}
},
{
	id: 4
	name: "活动管理员"
	inherit: ( "客服人员" )
	level: 1
	commands: {
		monster: true
		monstersmall: true
		monsterbig: true
		killmonster2: true
		cleanarea: true
		cleanmap: true
		item: [true, true]
		zeny: [true, true]
		disguise: [true, true]
		undisguise: [true, true]
		size: [true, true]
		raise: true
		raisemap: true
		day: true
		night: true
		skillon: true
		skilloff: true
		pvpon: true
		pvpoff: true
		gvgon: true
		gvgoff: true
		allowks: true
		me: true
		marry: true
		divorce: true
		refreshall: true
	}
	log_commands: true
	permissions: {
		can_trade: false
		any_warp: true
	}
},
{
	id: 5
	name: "VIP玩家"
	inherit: ( "普通玩家" ) /* VIP玩家继承了普通玩家的权限设置, 可以做任何普通玩家能做的事情 */
	level: 0
	commands: {
		rates: true
		who: true
	}
	permissions: {
		/* 默认情况下, 没有任何特殊权限 */
	}
},
{
	id: 10
	name: "执法者"
	inherit: ( "客服人员" )
	level: 2
	commands: {
		hide: true
		follow: true
		kick: true
		disguise: true
		fakename: true
		option: true
		speed: true
		warp: true
		kill: true
		recall: true
		ban: true
		block: true
		jail: true
		jailfor: true
		mute: true
		storagelist: true
		cartlist: true
		itemlist: true
		stats: true
	}
	log_commands: true
	permissions: {
		join_chat: true
		kick_chat: true
		hide_session: true
		who_display_aid: true
		hack_info: true
		any_warp: true
		view_hpmeter: true
	}
},
{
	id: 99
	name: "超级管理员"
	level: 99
	inherit: ( "客服人员", "执法者" )
	commands: {
		/* 
		   这里留空, 猛地一看或许会以为GM不能执行任何指令, 
		   但是在下面的权限列表中, 已经加入了 all_commands: true 啦, 这就表示了
		   该组成员可以执行全部指令了.  
		*/
	}
	log_commands: true
	permissions: {
		can_trade: true
		can_party: true
		all_skill: false
		all_equipment: false
		skill_unconditional: false
		use_check: true
		use_changemaptype: true
		all_commands: true
		channel_admin: true
		can_trade_bounded: true
		item_unconditional: false
		bypass_stat_onclone: true
		bypass_max_stat: true
		cashshop_sale: true
		/* all_permission: true */
	}
}
)

