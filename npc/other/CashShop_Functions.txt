//===== rAthenaCN 汉化声明 ===================================
//= 您可以随意转载和使用本汉化脚本。若您使用、借鉴或复制了
//= 此脚本中的汉化成果，那么请在您的脚本中加上并保留这七行
//= 汉化声明，由衷感谢。
//= 若您对这个脚本有更好的翻译建议，或发现此脚本的汉化错误，
//= 请前往 http://rathena.cn 上报您发现的问题，谢谢。
//============================================================

//===== rAthena Script ======================================= 
//= Cash Shop Functions
//===== By: ================================================== 
//= L0ne_W0lf
//===== Current Version: ===================================== 
//= 1.8
//===== Compatible With: ===================================== 
//= rAthena Project
//===== Description: ========================================= 
//= Used for Cash shop items:
//= - Kafra Card
//= - Giant Fly Wing
//= - Neuralizer
//= - Dungeon Teleport Scroll
//= Also included are functions related to the VIP system.
//===== Additional Comments: ================================= 
//= 1.0 First version. [L0ne_W0lf]
//=     F_CashPartyCall Optimized by Trancid.
//= 1.1 Updated Dungeon Teleport Scroll. [L0ne_W0lf]
//=     Added Town Teleport Scroll Function
//=     Added Seige Teleport Scroll Function
//= 1.2 Updated the dungeon teleport scroll menu. [L0ne_w0lf]
//= 1.3 Implemented Aozi Giant Flywing Fix. (bugreport:4242) [L0ne_w0lf]
//= 1.4 Simplified Giant Flywing function using warpparty. [L0ne_w0lf]
//= 1.5 Neuralizer is no longer consumed upon failure. [Euphy]
//= 1.6 Updated Teleport functions and added Curious_Snowball. [Euphy]
//= 1.7 Added Dungeon Teleport Scroll II maps. [Euphy]
//= 1.8 Added VIP function. [Euphy]
//= 1.9 Added checkdragon() in F_CashReset. [Capuche]
//= 2.0 Moved VIP_Third_Class function into other/re/CashShop_Functions. [Capuche]
//============================================================ 

// Kafra Card - 卡普拉移动仓库
//============================================================ 
// - Open player's storage.
// - No arguments.
function	script	F_CashStore	{
	cutin "kafra_01",2;
	mes "[卡普拉 职员]";
	mes "您好, 欢迎呼叫卡普拉公司!";
	mes "现在将按照请求开启您的个人仓库.";
	callfunc("F_CheckKafCode", "[卡普拉 职员]");	//check your storage password, if set
	close2;
	openstorage;
	cutin "",255;
	return;
}

// Giant Fly Wing - 巨大的苍蝇翅膀
//============================================================ 
// - Warp party leader to random spot on the map.
// - Summon Party members on party leader map to a 3x3 location around the leader.
// - No arguments.
function	script	F_CashPartyCall	{
	warp "Random",0,0;
	if(getpartyleader(getcharid(1),2) == getcharid(0))
		warpparty "Leader", 0, 0, getcharid(1), strcharinfo(3), 3, 3;
	return;
}

// Neuralizer - 技能重置棒
//============================================================ 
// - Reset players skills. Weight must be 0, options must be off.
// - No arguments.
function	script	F_CashReset	{
	if (Class != Job_Novice && Weight == 0 && !checkriding() && !checkfalcon() && !checkcart() && !ismounting() && !checkdragon()) {
		resetskill;
		sc_end SC_ALL;
		if (countitem(12213)) delitem 12213,1;
	}
	return;
}

// Dungeon Teleport Scroll - 洞穴移动
//============================================================ 
// - Warp player to the selected dungeon.
// - Arg(0) = type of scroll.
function	script	F_CashDungeon	{
	switch(getarg(0)) {
	case 1:
		switch(select("朱诺 诺可罗德 1层(火洞1层):妙勒尼 废矿 2层:"+((checkre(0))?"":"汶巴拉树木里的异界通道")+":艾音贝赫 矿山 1层:斐扬洞穴 4层(废村):姜饼城 玩具工厂仓库:克雷斯特汉姆 地下监狱 1层: 龙之城 审良宫:昆仑 神仙的围棋台:依斯鲁得岛 海底洞窟 3层:乌龟岛 密穴:艾尔帕兰 钟塔 地下3层:艾尔帕兰 钟塔 地上3层:克雷斯特汉姆 地下水道 2层:梦罗克 史芬克斯 地下4层:梦罗克 金字塔 4层:普隆德拉 地下水道 3层:天津町 榻榻米迷宫:生体试验 研究所 地下1层:哎哟泰雅 古代神殿 内部")) {
		case 1: warp "mag_dun01",125,71; end;	// Nogg Road
		case 2: warp "mjo_dun02",80,297; end;	// Mjolnir Dead Pit
		case 3: warp "um_dun02",125,122; end;	// Umbala Dungeon (Pre-Renewal only)
		case 4: warp "ein_dun01",261,262; end;	// Einbroch Dungeon
		case 5: warp "pay_dun03",155,150; end;	// Payon Caves
		case 6: warp "xmas_dun01",133,130; end;	// Toy Factory
		case 7: warp "gl_prison",140,15; end;	// Glast Heim Prison
		case 8: warp "lou_dun03",165,38; end;	// Louyang Dungeon
		case 9: warp "gon_dun02",251,263; end;	// Kunlun Dungeon
		case 10: warp "iz_dun02",350,335; end;	// Izlude Undersea Tunnel
		case 11: warp "tur_dun02",165,30; end;	// Turtle Island
		case 12: warp "alde_dun03",275,180; end;	// Clocktower 3F
		case 13: warp "c_tower3",34,42; end;	// Clocktower B3F
		case 14: warp "gl_sew02",292,295; end;	// Glast Heim Sewers 2F
		case 15: warp "in_sphinx4",120,120; end;	// Sphinx Dungeon 4F
		case 16: warp "moc_pryd04",195,4; end;	// Pyramid Dungeon 4F
		case 17: warp "prt_sewb3",20,175; end;	// Prontera Culverts 3F
		case 18: warp "ama_dun01",222,144; end;	// Amatsu Dungeon 1F
		case 19: warp "lhz_dun01",19,153; end;	// Somatology Laboratory 1F
		case 20: warp "ayo_dun02",70,240; end;	// Ayotaya Dungeon 2F
		}
	case 2: // Menu names are not official.
		switch(select("托尔火山 洞穴 2层:拉赫 阿巫敦拉草原(冰洞外):菲音斯 原野(往无名岛):亡者国都 尼芙菲姆:普隆德拉迷宫森林 2层:优配擂斯 洞穴入口:梦罗克 蚂蚁地狱密穴 2层:朱诺 启 海伊洛学院:达纳托斯之塔 前:深渊湖水:菲依雅 大神殿(瑟斯隆尼勒):毁葛 奥丁神殿 南区")) {
		case 1: warp "thor_v02",77,208; end;	// Thor Volcano 2F
		case 2: warp "ra_fild01",237,333; end;	// Ice Dungeon
		case 3: warp "ve_fild07",127,131; end;	// Nameless Island
		case 4: warp "niflheim",206,179; end;	// Niflheim
		case 5: warp "prt_maze02",100,174; end;	// Labyrinth Forest F2
		case 6: warp "jupe_cave",36,54; end;	// Juperos
		case 7: warp "anthell02",36,265; end;	// Ant Hell F2
		case 8: warp "yuno_fild08",70,171; end;	// Kiel Hyre's Academy
		case 9: warp "hu_fild01",140,160; end;	// Thanatos Tower
		case 10: warp "hu_fild05",168,302; end;	// Abyss Lake
		case 11: warp "ra_temple",117,173; end;	// Rachel Sanctuary
		case 12: warp "odin_tem02",257,374; end;	// Odin Temple F2
		}
	case 3:
		switch(select("生体试验 研究所 地下2层:拉赫 冰洞 3层:毁葛 奥丁神殿 北区:托尔火山 洞穴 3层:深渊湖水 地下洞穴 3层:优配擂斯 废墟内部")) {
		case 1: warp "lhz_dun02",145,149; end;	// Somatology Laboratory 2F
		case 2: warp "ice_dun03",150,176; end;	// Ice Dungeon 3F
		case 3: warp "odin_tem03",278,235; end;	// Odin Temple 3F
		case 4: warp "thor_v03",144,170; end;	// Thor Volcano 3F
		case 5: warp "abyss_03",97,104; end;	// Abyss Lakes 3F
		case 6: warp "juperos_02",130,159; end;	// Juperos Dungeon 2F
		}
	}
	return;
}

// Coloured Butterly Wings - 城市移动
//============================================================ 
// - Warp player to different cities acording to the scroll.
// - Arg(0) = type of scroll.
function	script	F_CashCity	{
	switch(getarg(0)) {
	case 1: // Yellow - Rune-Midgart
		switch(select("卢恩米德加兹王国首都 普隆德拉:卫星都市 依斯鲁得岛:魔法之都 吉芬:山岳之都 斐扬:沙漠之都 梦罗克:港口之都 艾尔贝塔:运河之都 艾尔帕兰")) {
			case 1: warp "prontera",122,87; end;
			case 2: if (checkre(0)) warp "izlude",130,90; else warp "izlude",91,105; end;
			case 3: warp "geffen",128,48; end;
			case 4: warp "payon",164,123; end;
			case 5: warp "morocc",160,100; end;
			case 6: warp "alberta",117,50; end;
			case 7: warp "aldebaran",140,110; end;
		}
	case 2: // Green - Schwartzvalt
		switch(select("秀发兹发德共和国首都 朱诺:企业之都 里希塔乐镇:钢铁之都 艾音布罗克:采矿村落 艾音贝赫:田园都市 毁葛")) {
			case 1: warp "yuno",160,170; end;
			case 2: warp "lighthalzen",190,310; end;
			case 3: warp "einbroch",230,190; end;
			case 4: warp "einbech",187,120; end;
			case 5: warp "hugel",92,165; end;
		}
	case 3: // Red - Arunafeltz
		switch(select("阿卢纳贝兹 教国首都 拉赫:峡谷村落 菲音斯")) {
			case 1: warp "rachel",120,125; end;
			case 2: warp "veins",215,105; end;
		}
	case 4: // Blue - Islands
		switch(select("天水之国 天津町:神仙之岛 昆仑:哎哟泰雅:古都 龙之城")) {
			case 1: warp "amatsu",110,140; end;
			case 2: warp "gonryun",160,115; end;
			case 3: warp "ayothaya",220,170; end;
			case 4: warp "louyang",217,95; end;
		}
	case 5: // Blue - Islands (Renewal)
		switch(select("天水之国 天津:神仙之岛 昆仑:哎哟泰雅:古都 龙之城:莫斯科比亚:德瓦他:巴西")) {
			case 1: warp "amatsu",110,140; end;
			case 2: warp "gonryun",160,115; end;
			case 3: warp "ayothaya",220,170; end;
			case 4: warp "louyang",217,95; end;
			case 5: warp "moscovia",224,195; end;
			case 6: warp "dewata",200,107; end;
			case 7: warp "brasilis",196,181; end;
		}
	}
	return;
}

// Teleport Scrolls - 城市移动
//============================================================ 
// - Warp player to save point or city acording to the scroll.
// - Arg(0) = type of scroll.
function	script	F_CashTele	{
	switch(getarg(0)) {
	case 1:
		switch(select("卢恩米德加兹王国首都 普隆德拉:魔法之都 吉芬:运河之都 艾尔帕兰:卫星都市 依斯鲁得岛:复活点")) {
		case 1: warp "prontera",119,77; end;
		case 2: warp "geffen",119,39; end;
		case 3: warp "aldebaran",165,107; end;
		case 4: if (checkre(0)) warp "izlude",128,105; else warp "izlude",91,105; end;
		case 5: warp "SavePoint",0,0; end;
		}
	case 2:
		switch(select("山岳之都 斐扬:港口之都 艾尔贝塔:沙漠之都 梦罗克:海边之都 克魔岛:复活点")) {
		case 1: warp "payon",158,55; end;
		case 2: warp "alberta",115,57; end;
		case 3: warp "morocc",158,48; end;
		case 4: warp "comodo",217,148; end;
		case 5: warp "SavePoint",0,0; end;
		}
	case 3:
		switch(select("古都 龙之城:天水之国 天津:神仙之岛 昆仑:哎哟泰雅:复活点")) {
		case 1: warp "louyang",214,101; end;
		case 2: warp "amatsu",112,145; end;
		case 3: warp "gonryun",160,118; end;
		case 4: warp "ayothaya",216,175; end;
		case 5: warp "SavePoint",0,0; end;
		}
	case 4:
		switch(select("白雪村落 姜饼城:雨檀族村落 汶巴拉:死者国家 尼芙菲姆:复活点")) {
		case 1: warp "xmas",148,131; end;
		case 2: warp "umbala",93,154; end;
		case 3: warp "niflheim",187,189; end;
		case 4: warp "SavePoint",0,0; end;
		}
	case 5:
		switch(select("秀发兹发德共和国首都 朱诺:钢铁之都 艾音布罗克:企业之都 里希塔乐镇:田园都市 毁葛:复活点")) {
		case 1: warp "yuno",157,124; end;
		case 2: warp "einbroch",230,192; end;
		case 3: warp "lighthalzen",158,94; end;
		case 4: warp "hugel",93,159; end;
		case 5: warp "SavePoint",0,0; end;
		}
	case 6:
		switch(select("阿卢纳贝兹 教国首都 拉赫:峡谷村落 菲音斯:复活点")) {
		case 1: warp "rachel",118,132; end;
		case 2: warp "veins",214,125; end;
		case 3: warp "SavePoint",0,0; end;
		}
	}
	return;
}

// Siege Teleport Scroll - GVG城堡传送
//============================================================ 
// - Warp player to selected guild castle.
// - No arguments.
function	script	F_CashSiegeTele	{
	switch(select("娜易修番斯塔引 (aldeg_cas01):乎汗修番佳乌 (aldeg_cas02):纽蓝贝勒克 (aldeg_cas03):布勒刺布勒克 (aldeg_cas04):罗探布勒克 (aldeg_cas05):雷普立温 (gefg_cas01):耀布力格 (gefg_cas02):易司那普 (gefg_cas03):培勒格 (gefg_cas04):眉撒丝达刺 (gefg_cas05):明亭 (payg_cas01):天坛 (payg_cas02):佛影 (payg_cas03):红楼 (payg_cas04):竹林岘 (payg_cas05):克林希特 (prtg_cas01):斯般希特 (prtg_cas02):拉兹立克斯 (prtg_cas03):司葵古 (prtg_cas04):关德 (prtg_cas05)")) {
	case 1: warp "alde_gld",48,91; end;
	case 2: warp "alde_gld",103,245; end;
	case 3: warp "alde_gld",142,87; end;
	case 4: warp "alde_gld",236,243; end;
	case 5: warp "alde_gld",269,90; end;
	case 6: warp "gef_fild13",217,75; end;
	case 7: warp "gef_fild13",307,237; end;
	case 8: warp "gef_fild13",77,297; end;
	case 9: warp "gef_fild13",190,276; end;
	case 10: warp "gef_fild13",312,91; end;
	case 11: warp "pay_gld",121,232; end;
	case 12: warp "pay_gld",297,116; end;
	case 13: warp "pay_gld",318,293; end;
	case 14: warp "pay_gld",140,164; end;
	case 15: warp "pay_gld",202,264; end;
	case 16: warp "prt_gld",141,64; end;
	case 17: warp "prt_gld",240,131; end;
	case 18: warp "prt_gld",153,133; end;
	case 19: warp "prt_gld",126,240; end;
	case 20: warp "prt_gld",195,240; end;
	}
	return;
}

// Curious Snowball
//============================================================ 
// - You can get an effect of Restore, Endure, or Wing of Butterfly.
// - No arguments.
function	script	F_Snowball	{
	cutin "rutie_snownow03",2;
	mes "[雪人]";
	mes "圣诞节快乐!";
	switch(select("恢复部分HP/SP!:加强自身状态!:恢复SP到满状态!:回到人物储存点!")) {
	case 1:
		mes "阿哈!";
		mes "安静的夜晚~";
		percentheal 70,70;
		close2;
		cutin "",255;
		break;
	case 2:
		mes "祈祷...";
		mes "神圣的夜晚~";
		unitskilluseid getcharid(3),"SM_ENDURE",10;
		close2;
		cutin "",255;
		break;
	case 3:
		mes "嘿!";
		mes "白色圣诞~";
		percentheal 0,100;
		close2;
		cutin "",255;
		break;
	case 4:
		mes "铃儿响叮当~";
		mes "铃儿响叮当~ 铃儿响叮当~";
		close2;
		cutin "",255;
		warp "SavePoint",0,0;
		break;
	}
	end;
}

// Status reduction potion
//============================================================
// - Permanently reduces base stat <type> by <val>.
// - Returns status points equals to points needed to raise
//   that stat to original value.
// - Doesn't work if base status <type> would become lower than 1 after reduction.
// * callfunc("F_CashReduceStat",<type>{,<val>,<itemid>});
function	script	F_CashReduceStat	{
	.@type = getarg(0);
	.@amount = getarg(1, -1);
	.@itemid = getarg(2, 0);
	
	if((readparam(.@type) + .@amount) < 1) return;
	
	if(.@itemid) {
		if(countitem(.@itemid))
			delitem .@itemid,1;
		else
			return;
	}
	StatusPoint += needed_status_point(.@type, .@amount);
	statusup2 .@type,.@amount;
	return;
}
