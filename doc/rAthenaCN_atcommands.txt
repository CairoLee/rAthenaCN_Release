//===== rAthenaCN 文档 =======================================
//= rAthenaCN GM指令说明文件
//===== 作者: ================================================
//= rAthenaCN 开发团队
//===== 最后更新: ============================================
//= 20170117
//===== 文档简介: ============================================
//= rAthenaCN 是基于 rAthena 进行二次开发的, 在 rAthena 官方支
//= 持的GM指令基础上, rAthenaCN 也拓展了一些GM指令, 请参阅下面
//= 的说明, 它会重点介绍指令的参数和用法.
//============================================================

@eventrpt

用来查询服务器中各种脚本事件的调用次数和执行耗时, 以便脚本管理员调试自己的脚本性能.

使用场景:
	例如现在服务器发现过图之后要卡一下玩家才能移动, 排除了可能是网络原因外, 现在怀疑可能是脚本编写的有问题, 导致一些事件的执行事件过长. 

使用方法:
	输入指令后, 服务端将返回以下信息:

	========================================================================================
	事件名称                    次数        总耗时(ms)        平均耗时(ms)      最高单次耗时
	========================================================================================
	OnProgressbarAbortEvent     1           0                 0.00              0
	OnPCLoginEvent              3           9820              2413.00           3552.00
	========================================================================================
	目前共有 2 个事件被触发, 共触发 4 次, 处理事件累积总耗时: 9820 毫秒

	从上面的信息中可以看到 OnPCLoginEvent 事件的处理耗时太长了, 这应该就是导致出现玩家过图后会卡一下的元凶.

注意:
	- 此处记录的是地图服务器启动之后所有玩家触发到的所有事件, 而不仅仅是当前登录玩家执行过的事件.
	- 执行一个大量的 for 循环, 或类似 query_sql 这些会导致玩家卡住不动的指令和操作才会增加耗时
	- 耗时为 0 说明这个事件的处理代码效率很高, 这说明你的脚本效率很高
	- 耗时统计从事件被触发开始, 到第一个会导致脚本暂停的指令/事件处理代码执行完毕截止

会导致脚本暂停的指令:
	主要是 sleep、sleep2、next、close2、menu、select、prompt、input、progressbar, 他们的特点是执行这些指令时, 都需要等待客户端/玩家返回一定的信息或做出选择才能继续往下执行.

举个例子:
	-	script	OnPCLoginEvent	-1,{
	end;
	OnPCLoginEvent:
		// 进入此事件处理代码时, 地图服务器会记录事件处理的起始时间
		
		if (BaseLevel > 99) {
			announce "欢迎老玩家上线...",BC_ALL;
		}
		
		sleep2 100;		// 如果你加上了这一句, 那么耗时统计到此就结束了
		freeloop(1);
		for (.@i = 0; .@i < 5000; .@i++) {
			dispbottom "我是很耗时的循环操作, 这是我第 " + .@i + " 次执行";
		}
	end;
	}

	上面的例子执行后, 会发现他的耗时为 0, 看起来好像 OnPCLoginEvent 的执行效率很高, 但是实际上下面还有一个大量 for 循环卡着.
	在这种情况下, 耗时统计是不正确的, 一定要注意. 如果去掉 sleep2 这一行代码, 就能看见此事件处理代码很耗时了.

@refreshnpc <NPC文件路径>

用来刷新单个 NPC 脚本文件, 以便提高脚本开发者的开发效率(实验功能). 

我们知道 NPC 脚本文件可以很独立(他里面可能只有一个 NPC), 也有可能很复杂(里面有各种 function 和 NPC, 此外还附带着调用其他脚本文件的 function, 又或者里面有 function 被其他的脚本文件调用). 正因为这种关联特性, 所以处理起来效果就比较有限, 详见下面的注意事项.

关于路径: 
	NPC文件路径应该用正斜杠(/), 而不是反斜杠(\), 例如应该写成 npc/kafras/kafras.txt 而不是 npc\kafras\kafras.txt

注意:
	- 此指令只能将指定脚本文件中的 script 和 function 代码块卸载后重新读取.
	- 如果要刷新的脚本中有 mapflag 或者 monster 刷怪指令等, 那么这些 mapflag 定义和 monster 刷怪指令将不会被刷新.

@policy <行为策略编号>

用来切换账号的行为策略编号, 具体请见行为策略系统的说明.

@title <称号ID>

此功能仅限 2015 客户端可用, 可以用来修改玩家的称号.
称号ID可以在客户端资源文件 data/luafiles514/lua files/datainfo/titletable.lub 里面查到, 若设为 0 则取消称号.

注意:
	- 称号功能在官服隶属于成就系统, 但是现在成就系统功能还没实装.
	- 从 rAthenaCN v1.7.0 开始, 使用该指令设置的称号会被保存到数据库

@recallmap

召唤当前地图的玩家到你身边过来.

@reloadloginconf

该指令只有启用了VIP会员系统才能使用, 让地图服务器能够重新读取“登陆服务器的配置文件”.
这听起来很奇怪, 实际上是因为地图服务器需要依赖 conf/login_athena.conf 的 vip_group 选项来获取 VIP 玩家的 group 编号.

地图服务器获取这个 vip_group 是为了当 GM 使用 @vip 指令试图让自己成为 VIP, 
或使用 vip_time 脚本指令试图修改 GM 账号的 VIP 时间的时候, 能够给予友好的错误提示.

@reloadmannerdb

用来重新载入“聊天内容敏感词库”的指令, 对应的数据文件为 conf/manner.txt

@reloadpolicies

用来重新载入“账号行为策略数据库”的指令, 对应的数据文件为 conf/policies.conf
